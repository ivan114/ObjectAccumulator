{"version":3,"sources":["assets/favicon64.svg","views/PackageStatusContainer.tsx","components/PackageStatus.tsx","views/AppHeader.tsx","components/ClickToCopy.tsx","views/QuickStartSection.tsx","views/FeaturesSection.tsx","func/generateUsers.ts","components/TestingStatus.tsx","views/TestingView.tsx","views/PreviewView.tsx","views/TryNowSection.tsx","App.tsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","x","y","width","height","rx","_ref5","stroke","strokeWidth","fill","fillRule","transform","xlinkHref","mask","strokeOpacity","fontFamily","fontSize","fontStyle","fontWeight","letterSpacing","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","PackageStatusContainer","style","minHeight","textAlign","position","bottom","right","padding","children","PackageStatus","href","link","img","margin","src","alt","AppHeader","Container","Header","as","content","inverted","marginBottom","marginTop","image","Button","basic","size","Icon","name","primary","role","aria-label","ClickToCopy","onCopy","setState","open","setTimeout","state","Popup","on","trigger","text","icon","compact","React","QuickStartSection","Segment","secondary","Grid","columns","stackable","Divider","vertical","Row","Column","FeaturesSection","List","ordered","Item","DataAmount","DataLevel","generateSingleUser","config","firstName","Faker","lastName","user","partial","Math","random","username","internet","userName","email","phoneNo","phone","phoneNumber","country","address","county","level","TwoLevel","partner","Single","TestStatusEnum","TestName","TestingStatus","Label","color","result","status","Done","Testing","Error","getColor","NotTested","loading","Queuing","NotAvailable","getIcon","parseFloat","performance","toPrecision","message","getText","Targets","DeepMerge","DisplayName","Description","merge","items","Deepmerge","all","extract","canDeepMerge","ObjectAssign","reduce","acc","Accumulator","from","Lodash","_merge","TestTarget","generatorConfig","testStatus","setTestStatus","runTest","testingConfig","progress","Promise","resolve","then","t1","now","testData","t2","output","JSON","stringify","e","Subheader","TestingView","setTestingConfig","accumulatorTestTargetRef","deepmergeTestTargetRef","assignTestTargetRef","lodashTestTargetRef","initialValues","retryTimes","onSubmit","form","a","current","submitForm","Form","Field","render","field","Group","active","value","onClick","setFieldValue","Input","type","action","disabled","max","min","fluid","users","PreviewView","listRef","scrollToItem","itemData","itemSize","itemCount","data","index","whiteSpace","backgroundColor","TryNowSection","setUsers","setLoading","setGeneratorConfig","amount","Number","count","push","generateUsers","generatedUsers","widths","Select","label","options","onChange","event","dropdownProps","Dimmer","Loader","Message","warning","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dbeef25.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"favicon64\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"rect\", {\n  id: \"path-1\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-3\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-5\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-7\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-9\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}));\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"favicon64\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  fill: \"#D8D8D8\",\n  x: 0,\n  y: 7,\n  width: 64,\n  height: 20\n}), React.createElement(\"rect\", {\n  id: \"Rectangle-Copy\",\n  fill: \"#D8D8D8\",\n  x: 0,\n  y: 37,\n  width: 64,\n  height: 20\n}), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(8.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-2\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-1\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Red\",\n  mask: \"url(#mask-2)\",\n  fill: \"#E64E42\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-2)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-2)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(28.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-4\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-3\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Blue\",\n  mask: \"url(#mask-4)\",\n  fill: \"#3B9AD9\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-4)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-4)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(38.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-6\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-5\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Orange\",\n  mask: \"url(#mask-6)\",\n  fill: \"#FEA829\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-6)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-6)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(8.000000, 37.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-8\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-7\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Red\",\n  mask: \"url(#mask-8)\",\n  fill: \"#E64E42\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-8)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-8)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(18.000000, 37.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-10\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-9\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Green\",\n  mask: \"url(#mask-10)\",\n  fill: \"#30AD63\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-10)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-10)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})));\n\nvar SvgFavicon64 = function SvgFavicon64(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"64px\",\n    height: \"64px\",\n    viewBox: \"0 0 64 64\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgFavicon64, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/favicon64.6c4960f3.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\n\nexport default function PackageStatusContainer(props: {\n  children: React.ReactNode;\n}) {\n  return (\n    <>\n      <div style={{ minHeight: 100 }} />\n      <div\n        style={{\n          textAlign: \"right\",\n          position: \"absolute\",\n          bottom: 0,\n          right: 0,\n          padding: \"1em 1.5em\",\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\n\ninterface PackageStatusProps {\n  link?: string;\n  img: string;\n  alt: string;\n}\n\nexport default function PackageStatus(props: PackageStatusProps) {\n  return (\n    <a href={props.link || props.img} style={{ margin: \"0em 0.2em\" }}>\n      <img src={props.img} alt={props.alt} />\n    </a>\n  );\n}\n","import * as React from \"react\";\n\nimport { ReactComponent as Logo } from \"../assets/favicon64.svg\";\n\nimport { Container, Header, Button, Icon } from \"semantic-ui-react\";\nimport PackageStatusContainer from \"./PackageStatusContainer\";\nimport PackageStatus from \"../components/PackageStatus\";\n\nexport default function AppHeader() {\n  return (\n    <Container>\n      <Header\n        as=\"h1\"\n        content=\"Object Accumulator\"\n        inverted\n        style={{\n          fontSize: \"4em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"0.5em\",\n        }}\n        image={<Logo style={{ margin: \"0.1em\" }} />}\n      />\n      <Header\n        as=\"h3\"\n        content=\"A Javascript/Typescript object merging tool, focus on performance and easy-to-use. Good alternative to deepmerge in most case.\"\n        inverted\n        style={{\n          fontSize: \"1.7em\",\n          fontWeight: \"normal\",\n          marginTop: \"1.5em\",\n        }}\n      />\n      <Button basic inverted size=\"huge\">\n        <Icon name=\"github\" />\n        Github\n      </Button>\n      <Button basic inverted size=\"huge\">\n        <Icon name=\"book\" />\n        Docs\n      </Button>\n      <Button primary size=\"huge\">\n        <Icon name=\"play\" />\n        Demo\n      </Button>\n      <PackageStatusContainer>\n        <div style={{ width: \"100%\", padding: \"0.5em\" }}>\n          Created with{\" \"}\n          <span role=\"img\" aria-label=\"heart\">\n            ❤️\n          </span>{\" \"}\n          by <a href=\"https://github.com/ivan114\">Ivan Li</a>\n        </div>\n        <PackageStatus\n          link=\"https://travis-ci.org/ivan114/object-accumulator\"\n          img=\"https://travis-ci.org/ivan114/object-accumulator.svg?branch=master\"\n          alt=\"NPM version\"\n        />\n        <PackageStatus\n          link=\"https://www.npmjs.com/package/object-accumulator\"\n          img=\"https://img.shields.io/npm/v/object-accumulator.svg\"\n          alt=\"NPM version\"\n        />\n        <PackageStatus\n          img=\"https://img.shields.io/npm/dm/object-accumulator.svg\"\n          alt=\"Downloads\"\n        />\n        <PackageStatus\n          link=\"https://github.com/conventional-changelog/standard-version\"\n          img=\"https://img.shields.io/badge/release-standard%20version-brightgreen.svg\"\n          alt=\"Standard Version\"\n        />\n        <PackageStatus\n          link=\"https://github.com/prettier/prettier\"\n          img=\"https://img.shields.io/badge/styled_with-prettier-ff69b4.svg\"\n          alt=\"styled with prettier\"\n        />\n        <PackageStatus\n          link=\"https://conventionalcommits.org\"\n          img=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\"\n          alt=\"Conventional Commits\"\n        />\n      </PackageStatusContainer>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { Button, Icon, Popup } from \"semantic-ui-react\";\n\ninterface ClickToCopyProps {\n  text: string;\n}\n\ninterface ClickToCopyState {\n  open?: boolean;\n}\n\nexport default class ClickToCopy extends React.Component<\n  ClickToCopyProps,\n  ClickToCopyState\n> {\n  constructor(props: ClickToCopyProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <Popup\n          open={this.state.open}\n          content=\"Copied to clipboard!\"\n          on=\"click\"\n          position=\"top center\"\n          trigger={\n            <CopyToClipboard text={this.props.text} onCopy={this.onCopy}>\n              <Button icon basic compact>\n                <Icon name=\"copy\" />\n              </Button>\n            </CopyToClipboard>\n          }\n        ></Popup>\n      </>\n    );\n  }\n\n  onCopy = () => {\n    this.setState({ open: true });\n    setTimeout(() => {\n      this.setState({ open: false });\n    }, 2000);\n  };\n}\n","import * as React from \"react\";\nimport { Segment, Header, Grid, Divider, Icon } from \"semantic-ui-react\";\nimport ClickToCopy from \"../components/ClickToCopy\";\n\nexport default function QuickStartSection() {\n  return (\n    <>\n      <Header as=\"h1\">Quick Start</Header>\n      <Segment secondary>\n        <Grid columns=\"2\" stackable textAlign=\"center\">\n          <Divider vertical>Or</Divider>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <code>\n                <Icon name=\"terminal\" /> yarn add object-accumulator {\"  \"}\n                <ClickToCopy text=\"yarn add object-accumulator\" />\n              </code>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <code>\n                <Icon name=\"terminal\" /> npm install --save object-accumulator{\" \"}\n                {\"  \"}\n                <ClickToCopy text=\"npm install --save object-accumulator\" />\n              </code>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Header, List, Segment } from \"semantic-ui-react\";\n\nexport default function FeaturesSection() {\n  return (\n    <>\n      <Header as=\"h1\">Features</Header>\n      <Segment style={{ padding: \"0em 4em\" }} vertical>\n        <List size=\"large\" ordered>\n          <List.Item>\n            <List.Header>\n              Merge objects with high volume and good performance concern\n            </List.Header>\n          </List.Item>\n          <List.Item>\n            <List.Header>Support high volume</List.Header>Object.assign merging\n            100000 items on Safari throw exception :/\n          </List.Item>\n          <List.Item>\n            <List.Header>High Performance</List.Header>Lazy picking value\n            instead of really merging all objects\n          </List.Item>\n          <List.Item>\n            <List.Header>Low Memory Usage</List.Header>Alway reuse same instance\n            data structure instead of creating new every time\n          </List.Item>\n          <List.Item>\n            <List.Header>Lazy Process and Interactive</List.Header>Perform merge\n            only when you need the result, not doing unnecessary processing,\n            Accumulator can be manipulated before/after merge\n          </List.Item>\n          <List.Item>\n            <List.Header>\n              Lightweight and without external dependencies\n            </List.Header>\n            ~1KB gzipped\n          </List.Item>\n        </List>\n      </Segment>\n    </>\n  );\n}\n","import Faker from \"faker\";\n\nexport enum DataAmount {\n  \"10k\" = \"10000\",\n  \"50k\" = \"50000\",\n  \"100k\" = \"100000\",\n  \"250k\" = \"250000\",\n  \"500k\" = \"500000\",\n}\n\nexport enum DataLevel {\n  \"Single\",\n  \"TwoLevel\",\n}\n\nexport interface GenerateDataFormModel {\n  amount: DataAmount;\n  level: DataLevel;\n}\n\nexport interface UserModal {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  phoneNo: string;\n  country: string;\n  partner: Partial<UserModal>;\n}\n\nexport type UserData = Array<Partial<UserModal>>;\n\nfunction generateSingleUser(config: {\n  level: DataLevel;\n  partial: boolean;\n}): Partial<UserModal> {\n  const firstName = Faker.name.firstName();\n  const lastName = Faker.name.lastName();\n\n  let user: Partial<UserModal> = {};\n\n  if (config.partial) {\n    if (Math.random() < 0.5) {\n      user.firstName = firstName;\n    }\n\n    if (Math.random() < 0.5) {\n      user.lastName = lastName;\n    }\n\n    if (Math.random() < 0.5) {\n      user.username = Faker.internet.userName(firstName, lastName);\n    }\n\n    if (Math.random() < 0.5) {\n      user.email = Faker.internet.email(firstName, lastName);\n    }\n\n    if (Math.random() < 0.5) {\n      user.phoneNo = Faker.phone.phoneNumber();\n    }\n\n    if (Math.random() < 0.5) {\n      user.country = Faker.address.county();\n    }\n  } else {\n    user = {\n      firstName,\n      lastName,\n      username: Faker.internet.userName(firstName, lastName),\n      email: Faker.internet.email(firstName, lastName),\n      phoneNo: Faker.phone.phoneNumber(),\n      country: Faker.address.county(),\n    };\n  }\n\n  if (config.level === DataLevel.TwoLevel) {\n    user.partner = generateSingleUser({\n      level: DataLevel.Single,\n      partial: config.partial,\n    });\n  }\n\n  if (Object.keys(user).length === 0) {\n    return generateSingleUser(config);\n  }\n\n  return user;\n}\n\nexport function generateUsers(config: GenerateDataFormModel): UserData {\n  const { level } = config;\n  let users: UserData = [];\n  const amount = Number(config.amount);\n  for (let count = 0; count < amount; count++) {\n    if (count === 0) {\n      users.push(generateSingleUser({ level, partial: false }));\n      continue;\n    }\n\n    users.push(generateSingleUser({ level, partial: true }));\n  }\n  return users;\n}\n","import * as React from \"react\";\nimport { Label, Icon } from \"semantic-ui-react\";\n\nexport enum TestStatusEnum {\n  NotAvailable,\n  NotTested,\n  Queuing,\n  Testing,\n  Error,\n  Done,\n}\n\nexport interface BaseStatus {\n  status: TestStatusEnum;\n}\n\ntype NotAvailableStatus = BaseStatus & {\n  status: TestStatusEnum.NotAvailable;\n};\n\ntype NotTestedStatus = BaseStatus & {\n  status: TestStatusEnum.NotTested;\n};\n\ntype QueuingStatus = BaseStatus & {\n  status: TestStatusEnum.Queuing;\n};\n\ntype TestingStatus = BaseStatus & {\n  status: TestStatusEnum.Testing;\n  progress: number;\n};\n\ntype ErrorStatue = BaseStatus & {\n  status: TestStatusEnum.Error;\n  message: string;\n};\n\ntype DoneStatus = BaseStatus & {\n  status: TestStatusEnum.Done;\n  performance: number;\n  output: string;\n};\n\nexport type TestStatus =\n  | NotAvailableStatus\n  | NotTestedStatus\n  | QueuingStatus\n  | TestingStatus\n  | ErrorStatue\n  | DoneStatus;\n\nexport default function TestingStatus(props: { result: TestStatus }) {\n  function getColor() {\n    switch (props.result.status) {\n      case TestStatusEnum.Done:\n        return \"green\";\n      case TestStatusEnum.Testing:\n        return \"yellow\";\n      case TestStatusEnum.Error:\n        return \"red\";\n    }\n  }\n\n  function getText() {\n    switch (props.result.status) {\n      case TestStatusEnum.NotTested:\n        return \"Not Tested\";\n      case TestStatusEnum.NotAvailable:\n        return \"Not Available\";\n      case TestStatusEnum.Done:\n        return `Done - ${parseFloat(\n          props.result.performance.toPrecision(3),\n        )}ms`;\n      case TestStatusEnum.Queuing:\n        return \"In Queue\";\n      case TestStatusEnum.Testing:\n        return \"Testing\";\n      case TestStatusEnum.Error:\n        return `Error - ${props.result.message}`;\n    }\n  }\n\n  function getIcon() {\n    switch (props.result.status) {\n      case TestStatusEnum.NotTested:\n        return <Icon name=\"bullseye\" />;\n      case TestStatusEnum.Testing:\n        return <Icon name=\"spinner\" loading />;\n      case TestStatusEnum.Queuing:\n        return <Icon name=\"spinner\" />;\n      case TestStatusEnum.Error:\n      case TestStatusEnum.NotAvailable:\n        return <Icon name=\"times\" />;\n      case TestStatusEnum.Done:\n        return <Icon name=\"check\" />;\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Label color={getColor()} size=\"large\">\n      {getIcon()}\n      {getText()}\n    </Label>\n  );\n}\n","import * as React from \"react\";\nimport { Accumulator } from \"object-accumulator\";\nimport Deepmerge from \"deepmerge\";\nimport { merge as _merge } from \"lodash\";\n\nimport {\n  UserData,\n  GenerateDataFormModel,\n  DataLevel,\n} from \"../func/generateUsers\";\nimport { Segment, Header, Grid, Button, Form } from \"semantic-ui-react\";\nimport { Formik, Field, FieldProps } from \"formik\";\nimport TestingStatus, {\n  TestStatus,\n  TestStatusEnum,\n} from \"../components/TestingStatus\";\n\nenum TestName {\n  \"Accumulator\" = \"Accumulator\",\n  \"ObjectAssign\" = \"ObjectAssign\",\n  \"DeepMerge\" = \"DeepMerge\",\n  \"Lodash\" = \"Lodash\",\n}\n\ninterface TestConfig {\n  retryTimes: number;\n  extract: boolean;\n}\n\ninterface Target {\n  DisplayName: string;\n  Description: string;\n  canDeepMerge?: boolean;\n  merge: (items: any[]) => any;\n  extract: (items: any[], key: string) => any;\n}\n\nconst Targets: { [key in TestName]: Target } = {\n  [TestName.DeepMerge]: {\n    DisplayName: \"deepmerge\",\n    Description: \"Very popular package for merging objects\",\n    merge: items => Deepmerge.all(items),\n    extract: (items, key) => (Deepmerge.all(items) as any)[key],\n    canDeepMerge: true,\n  },\n  [TestName.ObjectAssign]: {\n    DisplayName: \"Object.assign with spread operator\",\n    Description:\n      \"Vanilla Javascript function for shallow merging objects, cannot test 2-level merge\",\n    merge: items => items.reduce((acc, i) => Object.assign(acc, i), {}),\n    extract: (items, key) =>\n      items.reduce((acc, i) => Object.assign(acc, i), {})[key],\n  },\n  [TestName.Accumulator]: {\n    DisplayName: \"Accumulator\",\n    Description: \"THIS package\",\n    merge: items => Accumulator.from(items).merge(),\n    extract: (items, key) => Accumulator.from(items).extract(key),\n    canDeepMerge: true,\n  },\n  [TestName.Lodash]: {\n    DisplayName: \"Lodash _.merge()\",\n    Description: \"Very popular utility package for Javascript\",\n    merge: items => items.reduce((acc, i) => _merge(acc, i), {}),\n    extract: (items, key) => items.reduce((acc, i) => _merge(acc, i), {})[key],\n    canDeepMerge: true,\n  },\n};\n\nconst TestTarget = React.forwardRef(\n  (\n    props: {\n      testData: any[];\n      target: Target;\n      generatorConfig: GenerateDataFormModel;\n      testingConfig?: TestConfig;\n    },\n    ref,\n  ) => {\n    const [testStatus, setTestStatus] = React.useState<TestStatus>(\n      props.generatorConfig.level === DataLevel.TwoLevel &&\n        !props.target.canDeepMerge\n        ? { status: TestStatusEnum.NotAvailable }\n        : { status: TestStatusEnum.NotTested },\n    );\n\n    const runTest = () => {\n      const { target, generatorConfig, testingConfig } = props;\n      if (!testingConfig) {\n        return;\n      }\n      if (\n        generatorConfig.level === DataLevel.TwoLevel &&\n        !target.canDeepMerge\n      ) {\n        return;\n      }\n      setTestStatus({ status: TestStatusEnum.Testing, progress: 0 });\n      return new Promise<TestStatus>(resolve => setTimeout(resolve, 100)).then(\n        () => {\n          try {\n            if (testingConfig.extract) {\n              const t1 = performance.now();\n              const result = props.target.extract(props.testData, \"email\");\n              const t2 = performance.now();\n              const status: TestStatus = {\n                status: TestStatusEnum.Done,\n                performance: t2 - t1,\n                output: result,\n              };\n              setTestStatus(status);\n              return status;\n            } else {\n              const t1 = performance.now();\n              const result = props.target.merge(props.testData);\n              const t2 = performance.now();\n              const status: TestStatus = {\n                status: TestStatusEnum.Done,\n                performance: t2 - t1,\n                output: JSON.stringify(result, undefined, \"  \"),\n              };\n              setTestStatus(status);\n              return status;\n            }\n          } catch (e) {\n            const status: TestStatus = {\n              status: TestStatusEnum.Error,\n              message: e.name,\n            };\n            setTestStatus(status);\n            return status;\n          }\n        },\n      );\n    };\n\n    React.useImperativeHandle(ref, () => ({\n      runTest,\n    }));\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width=\"12\">\n              <Header as=\"h4\">\n                {props.target.DisplayName}\n                <Header.Subheader>{props.target.Description}</Header.Subheader>\n              </Header>\n            </Grid.Column>\n            <Grid.Column width=\"4\" textAlign=\"right\">\n              <TestingStatus result={testStatus} />\n            </Grid.Column>\n          </Grid.Row>\n          {testStatus.status === TestStatusEnum.Done ? (\n            <Grid.Row>\n              <Grid.Column width=\"16\">\n                <Header as=\"h5\">Output</Header>\n                <Segment inverted>\n                  <code>{testStatus.output}</code>\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Segment>\n    );\n  },\n);\n\nexport default function TestingView(props: {\n  users: UserData;\n  generatorConfig: GenerateDataFormModel;\n}) {\n  const [testingConfig, setTestingConfig] = React.useState<TestConfig>();\n  // const [testStatus, setTestStatus] = React.useState<\n  //   { [key in TestName]?: TestStatus }\n  // >({});\n\n  const accumulatorTestTargetRef = React.useRef<typeof TestTarget>();\n  const deepmergeTestTargetRef = React.useRef<typeof TestTarget>();\n  const assignTestTargetRef = React.useRef<typeof TestTarget>();\n  const lodashTestTargetRef = React.useRef<typeof TestTarget>();\n\n  return (\n    <>\n      <Formik<TestConfig>\n        initialValues={{\n          retryTimes: 5,\n          extract: true,\n        }}\n        onSubmit={async form => {\n          setTestingConfig(form);\n          await (accumulatorTestTargetRef.current! as any).runTest();\n          await (deepmergeTestTargetRef.current! as any).runTest();\n          await (lodashTestTargetRef.current! as any).runTest();\n          await (assignTestTargetRef.current! as any).runTest();\n        }}\n      >\n        {({ submitForm }) => (\n          <Form>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width=\"5\">\n                  <Form.Field>\n                    <label>Mode</label>\n                    <Field\n                      name=\"extract\"\n                      render={({ form, field }: FieldProps<TestConfig>) => (\n                        <Button.Group>\n                          <Button\n                            active={field.value}\n                            onClick={() => form.setFieldValue(\"extract\", true)}\n                          >\n                            Extract\n                          </Button>\n                          <Button\n                            active={!field.value}\n                            onClick={() => form.setFieldValue(\"extract\", false)}\n                          >\n                            Merge\n                          </Button>\n                        </Button.Group>\n                      )}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width=\"8\">\n                  <Form.Field>\n                    <label>Times</label>\n                    <Field\n                      name=\"retryTimes\"\n                      render={({ form, field }: FieldProps<TestConfig>) => (\n                        <Form.Input type=\"text\" value={field.value} action>\n                          <input disabled />\n                          <Button\n                            onClick={() =>\n                              form.setFieldValue(\n                                \"retryTimes\",\n                                Math.max(field.value - 1, 1),\n                              )\n                            }\n                          >\n                            -1\n                          </Button>\n                          <Button\n                            onClick={() =>\n                              form.setFieldValue(\n                                \"retryTimes\",\n                                Math.min(field.value + 1, 10),\n                              )\n                            }\n                          >\n                            +1\n                          </Button>\n                        </Form.Input>\n                      )}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width=\"3\">\n                  <Form.Field>\n                    <label>-</label>\n                    <Button primary fluid onClick={submitForm}>\n                      Run\n                    </Button>\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n      <TestTarget\n        ref={accumulatorTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.Accumulator}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={deepmergeTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.DeepMerge}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={lodashTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.Lodash}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={assignTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.ObjectAssign}\n        generatorConfig={props.generatorConfig}\n      />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList } from \"react-window\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { UserData } from \"../func/generateUsers\";\n\nexport default function PreviewView(props: { users: UserData }) {\n  const listRef = React.createRef<FixedSizeList>();\n\n  function gotoTop() {\n    if (listRef.current) {\n      listRef.current.scrollToItem(0);\n    }\n  }\n\n  function gotoBottom() {\n    if (listRef.current) {\n      listRef.current.scrollToItem(props.users.length);\n    }\n  }\n\n  return (\n    <>\n      <Button.Group fluid basic>\n        <Button onClick={gotoTop}>Scroll to Top</Button>\n        <Button onClick={gotoBottom}>Scroll to End</Button>\n      </Button.Group>\n      <div style={{ marginTop: \"1em\", minHeight: \"20em\" }}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <FixedSizeList\n              width={width}\n              height={height}\n              itemData={props.users}\n              itemSize={24}\n              itemCount={props.users.length}\n              ref={listRef}\n            >\n              {({ data, index, style }) => (\n                <div\n                  style={{\n                    ...style,\n                    whiteSpace: \"nowrap\",\n                    backgroundColor: index % 2 === 0 ? \"#dddddd\" : \"white\",\n                    width: \"initial\",\n                  }}\n                >\n                  <code>{JSON.stringify(data[index])}</code>\n                </div>\n              )}\n            </FixedSizeList>\n          )}\n        </AutoSizer>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Header,\n  Segment,\n  Form,\n  Grid,\n  Message,\n  Loader,\n  Dimmer,\n} from \"semantic-ui-react\";\nimport { Formik, Field, FieldProps } from \"formik\";\nimport {\n  GenerateDataFormModel,\n  DataAmount,\n  DataLevel,\n  generateUsers,\n  UserData,\n} from \"../func/generateUsers\";\nimport TestingView from \"./TestingView\";\nimport PreviewView from \"./PreviewView\";\n\nexport default function TryNowSection() {\n  const [users, setUsers] = React.useState<UserData>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [generatorConfig, setGeneratorConfig] = React.useState<\n    GenerateDataFormModel | undefined\n  >();\n  return (\n    <>\n      <Header as=\"h1\">Demo</Header>\n      <Segment>\n        <Header as=\"h3\">Generate Data</Header>\n        <Formik<GenerateDataFormModel>\n          initialValues={{ amount: DataAmount[\"10k\"], level: DataLevel.Single }}\n          onSubmit={form => {\n            setGeneratorConfig(form);\n            setLoading(true);\n            new Promise<UserData>(resolve =>\n              setTimeout(() => resolve(generateUsers(form)), 100),\n            ).then(generatedUsers => {\n              setUsers(generatedUsers);\n              setLoading(false);\n            });\n          }}\n        >\n          {({ submitForm }) => (\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Field\n                  name=\"amount\"\n                  render={({\n                    field,\n                    form,\n                  }: FieldProps<GenerateDataFormModel>) => (\n                    <Form.Select\n                      fluid\n                      label=\"Amount\"\n                      options={[\n                        {\n                          key: DataAmount[\"10k\"],\n                          text: DataAmount[\"10k\"],\n                          value: DataAmount[\"10k\"],\n                        },\n                        {\n                          key: DataAmount[\"50k\"],\n                          text: DataAmount[\"50k\"],\n                          value: DataAmount[\"50k\"],\n                        },\n                        {\n                          key: DataAmount[\"100k\"],\n                          text: DataAmount[\"100k\"],\n                          value: DataAmount[\"100k\"],\n                        },\n                        {\n                          key: DataAmount[\"250k\"],\n                          text: DataAmount[\"250k\"],\n                          value: DataAmount[\"250k\"],\n                        },\n                        {\n                          key: DataAmount[\"500k\"],\n                          text: DataAmount[\"500k\"],\n                          value: DataAmount[\"500k\"],\n                        },\n                      ]}\n                      onChange={(event, dropdownProps) =>\n                        form.setFieldValue(\"amount\", dropdownProps.value)\n                      }\n                      value={field.value}\n                    />\n                  )}\n                />\n                <Field\n                  name=\"level\"\n                  render={({\n                    field,\n                    form,\n                  }: FieldProps<GenerateDataFormModel>) => (\n                    <Form.Select\n                      fluid\n                      label=\"Level\"\n                      options={[\n                        {\n                          key: DataLevel.Single,\n                          text: \"Single Level\",\n                          value: DataLevel.Single,\n                        },\n                        {\n                          key: DataLevel.TwoLevel,\n                          text: \"Two Level\",\n                          value: DataLevel.TwoLevel,\n                        },\n                      ]}\n                      onChange={(event, dropdownProps) =>\n                        form.setFieldValue(\"level\", dropdownProps.value)\n                      }\n                      value={field.value}\n                    />\n                  )}\n                />\n                <Form.Field>\n                  <label>.</label>\n                  <Form.Button fluid primary onClick={submitForm}>\n                    Generate\n                  </Form.Button>\n                </Form.Field>\n              </Form.Group>\n            </Form>\n          )}\n        </Formik>\n      </Segment>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width=\"10\">\n            <Segment>\n              <Header as=\"h3\">Benchmark</Header>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              {!loading && users && generatorConfig ? (\n                <TestingView users={users} generatorConfig={generatorConfig} />\n              ) : (\n                <Message warning>Please Generate Data</Message>\n              )}\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Segment>\n              <Header as=\"h3\">\n                Preview Generated Data\n                {!loading && users ? (\n                  <Header.Subheader>{`Length: ${users.length}`}</Header.Subheader>\n                ) : null}\n              </Header>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              {!loading && users ? (\n                <PreviewView users={users} />\n              ) : (\n                <Message warning>Please Generate Data</Message>\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AppHeader from \"./views/AppHeader\";\nimport QuickStartSection from \"./views/QuickStartSection\";\nimport FeaturesSection from \"./views/FeaturesSection\";\nimport TryNowSection from \"./views/TryNowSection\";\n\nfunction App() {\n  return (\n    <div>\n      <Segment\n        inverted\n        textAlign=\"center\"\n        style={{ minHeight: 240, padding: \"0.5em 0em\" }}\n        vertical\n      >\n        <AppHeader />\n      </Segment>\n      <Container>\n        <Segment vertical>\n          <QuickStartSection />\n        </Segment>\n        <Segment vertical>\n          <FeaturesSection />\n        </Segment>\n        <Segment vertical>\n          <TryNowSection />\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}