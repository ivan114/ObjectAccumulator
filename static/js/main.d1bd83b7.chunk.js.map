{"version":3,"sources":["assets/favicon64.svg","views/PackageStatusContainer.tsx","components/PackageStatus.tsx","views/AppHeader.tsx","components/ClickToCopy.tsx","views/QuickStartSection.tsx","views/FeaturesSection.tsx","func/generateUsers.ts","components/TestingStatus.tsx","views/TestingView.tsx","views/PreviewView.tsx","views/TryNowSection.tsx","App.tsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","x","y","width","height","rx","stroke","strokeWidth","fill","fillRule","transform","xlinkHref","mask","strokeOpacity","fontFamily","fontSize","fontStyle","fontWeight","letterSpacing","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","PackageStatusContainer","style","minHeight","textAlign","position","bottom","right","padding","children","PackageStatus","href","link","img","margin","src","alt","AppHeader","Container","Header","as","content","inverted","marginBottom","marginTop","image","Button","basic","size","onClick","window","open","Icon","name","primary","location","role","aria-label","ClickToCopy","onCopy","setState","setTimeout","state","Popup","on","trigger","text","icon","compact","React","QuickStartSection","Segment","secondary","Grid","columns","stackable","Divider","vertical","Row","Column","FeaturesSection","List","ordered","Item","DataAmount","DataLevel","generateSingleUser","config","firstName","Faker","lastName","user","partial","Math","random","username","internet","userName","email","phoneNo","phone","phoneNumber","country","address","county","level","TwoLevel","partner","Single","TestStatusEnum","TestName","TestingStatus","Label","color","result","status","Done","Testing","Error","getColor","NotTested","loading","Queuing","NotAvailable","getIcon","parseFloat","performance","toPrecision","progress","testConfig","retryTimes","message","getText","Targets","DeepMerge","DisplayName","Description","merge","items","Deepmerge","all","extract","canDeepMerge","ObjectAssign","reduce","acc","Accumulator","from","Lodash","_merge","TestTarget","generatorConfig","testStatus","setTestStatus","runTest","a","testingConfig","Promise","resolve","t1","now","count","testData","t2","output","JSON","stringify","computer","tablet","mobile","Subheader","TestingView","setTestingConfig","accumulatorTestTargetRef","deepmergeTestTargetRef","assignTestTargetRef","lodashTestTargetRef","initialValues","onSubmit","form","current","submitForm","Form","Field","render","field","Group","active","value","setFieldValue","Input","type","action","disabled","max","min","fluid","users","PreviewView","listRef","scrollToItem","itemData","itemSize","itemCount","data","index","whiteSpace","backgroundColor","TryNowSection","setUsers","setLoading","setGeneratorConfig","amount","Number","push","generateUsers","then","generatedUsers","widths","Select","label","options","onChange","event","dropdownProps","Dimmer","Loader","Message","warning","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1bd83b7.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"favicon64\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"rect\", {\n  id: \"path-1\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-3\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-5\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-7\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}), React.createElement(\"rect\", {\n  id: \"path-9\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20,\n  rx: 2\n}));\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"favicon64\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  fill: \"#D8D8D8\",\n  x: 0,\n  y: 7,\n  width: 64,\n  height: 20\n}), React.createElement(\"rect\", {\n  id: \"Rectangle-Copy\",\n  fill: \"#D8D8D8\",\n  x: 0,\n  y: 37,\n  width: 64,\n  height: 20\n}), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(8.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-2\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-1\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Red\",\n  mask: \"url(#mask-2)\",\n  fill: \"#E64E42\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-2)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-2)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(28.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-4\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-3\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Blue\",\n  mask: \"url(#mask-4)\",\n  fill: \"#3B9AD9\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-4)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-4)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(38.000000, 7.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-6\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-5\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Orange\",\n  mask: \"url(#mask-6)\",\n  fill: \"#FEA829\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-6)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-6)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(8.000000, 37.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-8\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-7\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Red\",\n  mask: \"url(#mask-8)\",\n  fill: \"#E64E42\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-8)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-8)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})), React.createElement(\"g\", {\n  id: \"Value-Block\",\n  transform: \"translate(18.000000, 37.000000)\"\n}, React.createElement(\"mask\", {\n  id: \"mask-10\",\n  fill: \"white\"\n}, React.createElement(\"use\", {\n  xlinkHref: \"#path-9\"\n})), React.createElement(\"rect\", {\n  stroke: \"#979797\",\n  strokeWidth: 1,\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"g\", {\n  id: \"Green\",\n  mask: \"url(#mask-10)\",\n  fill: \"#30AD63\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  x: 0,\n  y: 0,\n  width: 17,\n  height: 20\n})), React.createElement(\"rect\", {\n  id: \"Rectangle\",\n  strokeOpacity: 0.2,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  mask: \"url(#mask-10)\",\n  x: 0.5,\n  y: 0.5,\n  width: 16,\n  height: 19,\n  rx: 2\n}), React.createElement(\"text\", {\n  id: \"value\",\n  mask: \"url(#mask-10)\",\n  fontFamily: \"SFProDisplay-MediumItalic, SF Pro Display\",\n  fontSize: 14,\n  fontStyle: \"italic\",\n  fontWeight: 500,\n  letterSpacing: 0.16882355\n})));\n\nvar SvgFavicon64 = function SvgFavicon64(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"64px\",\n    height: \"64px\",\n    viewBox: \"0 0 64 64\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgFavicon64, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/favicon64.6c4960f3.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\n\nexport default function PackageStatusContainer(props: {\n  children: React.ReactNode;\n}) {\n  return (\n    <>\n      <div style={{ minHeight: 120 }} />\n      <div\n        style={{\n          textAlign: \"right\",\n          position: \"absolute\",\n          bottom: 0,\n          right: 0,\n          padding: \"1em 1.5em\",\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\n\ninterface PackageStatusProps {\n  link?: string;\n  img: string;\n  alt: string;\n}\n\nexport default function PackageStatus(props: PackageStatusProps) {\n  return (\n    <a href={props.link || props.img} style={{ margin: \"0em 0.2em\" }}>\n      <img src={props.img} alt={props.alt} />\n    </a>\n  );\n}\n","import * as React from \"react\";\n\nimport { ReactComponent as Logo } from \"../assets/favicon64.svg\";\n\nimport { Container, Header, Button, Icon } from \"semantic-ui-react\";\nimport PackageStatusContainer from \"./PackageStatusContainer\";\nimport PackageStatus from \"../components/PackageStatus\";\n\nexport default function AppHeader() {\n  return (\n    <Container>\n      <Header\n        as=\"h1\"\n        content=\"Object Accumulator\"\n        inverted\n        style={{\n          fontSize: \"4em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"0.5em\",\n        }}\n        image={<Logo style={{ margin: \"0.1em\" }} />}\n      />\n      <Header\n        as=\"h3\"\n        content=\"A Javascript/Typescript object merging tool, focus on performance and easy-to-use. Good alternative to deepmerge in most case.\"\n        inverted\n        style={{\n          fontSize: \"1.7em\",\n          fontWeight: \"normal\",\n          marginTop: \"1.5em\",\n        }}\n      />\n      <Button\n        basic\n        inverted\n        size=\"huge\"\n        onClick={() =>\n          window.open(\"https://github.com/ivan114/ObjectAccumulator\")\n        }\n      >\n        <Icon name=\"github\" />\n        Github\n      </Button>\n      <Button\n        basic\n        inverted\n        size=\"huge\"\n        onClick={() => {\n          window.open(\"http://ivan114.github.io/ObjectAccumulator/docs\");\n        }}\n      >\n        <Icon name=\"book\" />\n        Docs\n      </Button>\n      <Button\n        primary\n        size=\"huge\"\n        onClick={() => {\n          window.location.href = \"#demo\";\n        }}\n      >\n        <Icon name=\"play\" />\n        Demo\n      </Button>\n      <PackageStatusContainer>\n        <div style={{ width: \"100%\", padding: \"0.5em\" }}>\n          Created with{\" \"}\n          <span role=\"img\" aria-label=\"heart\">\n            ❤️\n          </span>{\" \"}\n          by <a href=\"https://github.com/ivan114\">Ivan Li</a>\n        </div>\n        <PackageStatus\n          link=\"https://travis-ci.org/ivan114/object-accumulator\"\n          img=\"https://travis-ci.org/ivan114/object-accumulator.svg?branch=master\"\n          alt=\"NPM version\"\n        />\n        <PackageStatus\n          link=\"https://www.npmjs.com/package/object-accumulator\"\n          img=\"https://img.shields.io/npm/v/object-accumulator.svg\"\n          alt=\"NPM version\"\n        />\n        <PackageStatus\n          img=\"https://img.shields.io/npm/dm/object-accumulator.svg\"\n          alt=\"Downloads\"\n        />\n        <PackageStatus\n          link=\"https://github.com/conventional-changelog/standard-version\"\n          img=\"https://img.shields.io/badge/release-standard%20version-brightgreen.svg\"\n          alt=\"Standard Version\"\n        />\n        <PackageStatus\n          link=\"https://github.com/prettier/prettier\"\n          img=\"https://img.shields.io/badge/styled_with-prettier-ff69b4.svg\"\n          alt=\"styled with prettier\"\n        />\n        <PackageStatus\n          link=\"https://conventionalcommits.org\"\n          img=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\"\n          alt=\"Conventional Commits\"\n        />\n      </PackageStatusContainer>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { Button, Icon, Popup } from \"semantic-ui-react\";\n\ninterface ClickToCopyProps {\n  text: string;\n}\n\ninterface ClickToCopyState {\n  open?: boolean;\n}\n\nexport default class ClickToCopy extends React.Component<\n  ClickToCopyProps,\n  ClickToCopyState\n> {\n  constructor(props: ClickToCopyProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <Popup\n          open={this.state.open}\n          content=\"Copied to clipboard!\"\n          on=\"click\"\n          position=\"top center\"\n          trigger={\n            <CopyToClipboard text={this.props.text} onCopy={this.onCopy}>\n              <Button icon basic compact>\n                <Icon name=\"copy\" />\n              </Button>\n            </CopyToClipboard>\n          }\n        ></Popup>\n      </>\n    );\n  }\n\n  onCopy = () => {\n    this.setState({ open: true });\n    setTimeout(() => {\n      this.setState({ open: false });\n    }, 2000);\n  };\n}\n","import * as React from \"react\";\nimport { Segment, Header, Grid, Divider, Icon } from \"semantic-ui-react\";\nimport ClickToCopy from \"../components/ClickToCopy\";\n\nexport default function QuickStartSection() {\n  return (\n    <>\n      <Header as=\"h1\">Quick Start</Header>\n      <Segment secondary>\n        <Grid columns=\"2\" stackable textAlign=\"center\">\n          <Divider vertical>Or</Divider>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <code>\n                <Icon name=\"terminal\" /> yarn add object-accumulator {\"  \"}\n                <ClickToCopy text=\"yarn add object-accumulator\" />\n              </code>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <code>\n                <Icon name=\"terminal\" /> npm install --save object-accumulator{\" \"}\n                {\"  \"}\n                <ClickToCopy text=\"npm install --save object-accumulator\" />\n              </code>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Header, List, Segment } from \"semantic-ui-react\";\n\nexport default function FeaturesSection() {\n  return (\n    <>\n      <Header as=\"h1\">Features</Header>\n      <Segment style={{ padding: \"0em 4em\" }} vertical>\n        <List size=\"large\" ordered>\n          <List.Item>\n            <List.Header>\n              Merge objects with high volume and good performance concern\n            </List.Header>\n          </List.Item>\n          <List.Item>\n            <List.Header>Support high volume</List.Header>Object.assign merging\n            100000 items on Safari throw exception :/\n          </List.Item>\n          <List.Item>\n            <List.Header>High Performance</List.Header>Lazy picking value\n            instead of really merging all objects\n          </List.Item>\n          <List.Item>\n            <List.Header>Low Memory Usage</List.Header>Alway reuse same instance\n            data structure instead of creating new every time\n          </List.Item>\n          <List.Item>\n            <List.Header>Lazy Process and Interactive</List.Header>Perform merge\n            only when you need the result, not doing unnecessary processing,\n            Accumulator can be manipulated before/after merge\n          </List.Item>\n          <List.Item>\n            <List.Header>\n              Lightweight and without external dependencies\n            </List.Header>\n            ~1KB gzipped\n          </List.Item>\n        </List>\n      </Segment>\n    </>\n  );\n}\n","import Faker from \"faker\";\n\nexport enum DataAmount {\n  \"10k\" = \"10000\",\n  \"50k\" = \"50000\",\n  \"100k\" = \"100000\",\n  \"250k\" = \"250000\",\n  \"500k\" = \"500000\",\n}\n\nexport enum DataLevel {\n  \"Single\",\n  \"TwoLevel\",\n}\n\nexport interface GenerateDataFormModel {\n  amount: DataAmount;\n  level: DataLevel;\n}\n\nexport interface UserModal {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  phoneNo: string;\n  country: string;\n  partner: Partial<UserModal>;\n}\n\nexport type UserData = Array<Partial<UserModal>>;\n\nfunction generateSingleUser(config: {\n  level: DataLevel;\n  partial: boolean;\n}): Partial<UserModal> {\n  const firstName = Faker.name.firstName();\n  const lastName = Faker.name.lastName();\n\n  let user: Partial<UserModal> = {};\n\n  if (config.partial) {\n    if (Math.random() < 0.5) {\n      user.firstName = firstName;\n    }\n\n    if (Math.random() < 0.5) {\n      user.lastName = lastName;\n    }\n\n    if (Math.random() < 0.5) {\n      user.username = Faker.internet.userName(firstName, lastName);\n    }\n\n    if (Math.random() < 0.5) {\n      user.email = Faker.internet.email(firstName, lastName);\n    }\n\n    if (Math.random() < 0.5) {\n      user.phoneNo = Faker.phone.phoneNumber();\n    }\n\n    if (Math.random() < 0.5) {\n      user.country = Faker.address.county();\n    }\n  } else {\n    user = {\n      firstName,\n      lastName,\n      username: Faker.internet.userName(firstName, lastName),\n      email: Faker.internet.email(firstName, lastName),\n      phoneNo: Faker.phone.phoneNumber(),\n      country: Faker.address.county(),\n    };\n  }\n\n  if (config.level === DataLevel.TwoLevel) {\n    user.partner = generateSingleUser({\n      level: DataLevel.Single,\n      partial: config.partial,\n    });\n  }\n\n  if (Object.keys(user).length === 0) {\n    return generateSingleUser(config);\n  }\n\n  return user;\n}\n\nexport function generateUsers(config: GenerateDataFormModel): UserData {\n  const { level } = config;\n  let users: UserData = [];\n  const amount = Number(config.amount);\n  for (let count = 0; count < amount; count++) {\n    if (count === 0) {\n      users.push(generateSingleUser({ level, partial: false }));\n      continue;\n    }\n\n    users.push(generateSingleUser({ level, partial: true }));\n  }\n  return users;\n}\n","import * as React from \"react\";\nimport { Label, Icon } from \"semantic-ui-react\";\nimport { TestConfig } from \"../views/TestingView\";\n\nexport enum TestStatusEnum {\n  NotAvailable,\n  NotTested,\n  Queuing,\n  Testing,\n  Error,\n  Done,\n}\n\nexport interface BaseStatus {\n  status: TestStatusEnum;\n}\n\ntype NotAvailableStatus = BaseStatus & {\n  status: TestStatusEnum.NotAvailable;\n};\n\ntype NotTestedStatus = BaseStatus & {\n  status: TestStatusEnum.NotTested;\n};\n\ntype QueuingStatus = BaseStatus & {\n  status: TestStatusEnum.Queuing;\n};\n\ntype TestingStatus = BaseStatus & {\n  status: TestStatusEnum.Testing;\n  progress: number;\n};\n\ntype ErrorStatue = BaseStatus & {\n  status: TestStatusEnum.Error;\n  message: string;\n};\n\ntype DoneStatus = BaseStatus & {\n  status: TestStatusEnum.Done;\n  performance: number;\n  output: string;\n};\n\nexport type TestStatus =\n  | NotAvailableStatus\n  | NotTestedStatus\n  | QueuingStatus\n  | TestingStatus\n  | ErrorStatue\n  | DoneStatus;\n\nexport default function TestingStatus(props: {\n  result: TestStatus;\n  testConfig?: TestConfig;\n}) {\n  function getColor() {\n    switch (props.result.status) {\n      case TestStatusEnum.Done:\n        return \"green\";\n      case TestStatusEnum.Testing:\n        return \"yellow\";\n      case TestStatusEnum.Error:\n        return \"red\";\n    }\n  }\n\n  function getText() {\n    switch (props.result.status) {\n      case TestStatusEnum.NotTested:\n        return \"Not Tested\";\n      case TestStatusEnum.NotAvailable:\n        return \"Not Available\";\n      case TestStatusEnum.Done:\n        return `Done - avg ${parseFloat(\n          props.result.performance.toPrecision(3),\n        )}ms per exec`;\n      case TestStatusEnum.Queuing:\n        return \"In Queue\";\n      case TestStatusEnum.Testing:\n        return `Testing - ${props.result.progress}/${\n          props.testConfig ? props.testConfig.retryTimes : \"??\"\n        }`;\n      case TestStatusEnum.Error:\n        return `Error - ${props.result.message}`;\n    }\n  }\n\n  function getIcon() {\n    switch (props.result.status) {\n      case TestStatusEnum.NotTested:\n        return <Icon name=\"bullseye\" />;\n      case TestStatusEnum.Testing:\n        return <Icon name=\"spinner\" loading />;\n      case TestStatusEnum.Queuing:\n        return <Icon name=\"spinner\" />;\n      case TestStatusEnum.Error:\n      case TestStatusEnum.NotAvailable:\n        return <Icon name=\"times\" />;\n      case TestStatusEnum.Done:\n        return <Icon name=\"check\" />;\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Label color={getColor()} size=\"large\">\n      {getIcon()}\n      {getText()}\n    </Label>\n  );\n}\n","import * as React from \"react\";\nimport { Accumulator } from \"object-accumulator\";\nimport Deepmerge from \"deepmerge\";\nimport { merge as _merge } from \"lodash\";\n\nimport {\n  UserData,\n  GenerateDataFormModel,\n  DataLevel,\n} from \"../func/generateUsers\";\nimport { Segment, Header, Grid, Button, Form } from \"semantic-ui-react\";\nimport { Formik, Field, FieldProps } from \"formik\";\nimport TestingStatus, {\n  TestStatus,\n  TestStatusEnum,\n} from \"../components/TestingStatus\";\n\nenum TestName {\n  \"Accumulator\" = \"Accumulator\",\n  \"ObjectAssign\" = \"ObjectAssign\",\n  \"DeepMerge\" = \"DeepMerge\",\n  \"Lodash\" = \"Lodash\",\n}\n\nexport interface TestConfig {\n  retryTimes: number;\n  extract: boolean;\n}\n\ninterface Target {\n  DisplayName: string;\n  Description: string;\n  canDeepMerge?: boolean;\n  merge: (items: any[]) => any;\n  extract: (items: any[], key: string) => any;\n}\n\nconst Targets: { [key in TestName]: Target } = {\n  [TestName.DeepMerge]: {\n    DisplayName: \"deepmerge\",\n    Description: \"Very popular package for merging objects\",\n    merge: items => Deepmerge.all(items),\n    extract: (items, key) => (Deepmerge.all(items) as any)[key],\n    canDeepMerge: true,\n  },\n  [TestName.ObjectAssign]: {\n    DisplayName: \"Object.assign with spread operator\",\n    Description:\n      \"Vanilla Javascript function for shallow merging objects, cannot test 2-level merge\",\n    merge: items => items.reduce((acc, i) => Object.assign(acc, i), {}),\n    extract: (items, key) =>\n      items.reduce((acc, i) => Object.assign(acc, i), {})[key],\n  },\n  [TestName.Accumulator]: {\n    DisplayName: \"Accumulator\",\n    Description: \"THIS package\",\n    merge: items => Accumulator.from(items).merge(),\n    extract: (items, key) => Accumulator.from(items).extract(key),\n    canDeepMerge: true,\n  },\n  [TestName.Lodash]: {\n    DisplayName: \"Lodash _.merge()\",\n    Description: \"Very popular utility package for Javascript\",\n    merge: items => items.reduce((acc, i) => _merge(acc, i), {}),\n    extract: (items, key) => items.reduce((acc, i) => _merge(acc, i), {})[key],\n    canDeepMerge: true,\n  },\n};\n\nconst TestTarget = React.forwardRef(\n  (\n    props: {\n      testData: any[];\n      target: Target;\n      generatorConfig: GenerateDataFormModel;\n      testingConfig?: TestConfig;\n    },\n    ref,\n  ) => {\n    const [testStatus, setTestStatus] = React.useState<TestStatus>(\n      props.generatorConfig.level === DataLevel.TwoLevel &&\n        !props.target.canDeepMerge\n        ? { status: TestStatusEnum.NotAvailable }\n        : { status: TestStatusEnum.NotTested },\n    );\n\n    const runTest = async () => {\n      const { target, generatorConfig, testingConfig } = props;\n      if (!testingConfig) {\n        return;\n      }\n      if (\n        generatorConfig.level === DataLevel.TwoLevel &&\n        !target.canDeepMerge\n      ) {\n        return;\n      }\n      setTestStatus({ status: TestStatusEnum.Testing, progress: 0 });\n      await new Promise<undefined>(resolve => setTimeout(resolve, 100));\n      try {\n        if (testingConfig.extract) {\n          const t1 = performance.now();\n          let result: any;\n          for (\n            let count = 0;\n            count < props.testingConfig!.retryTimes;\n            count++\n          ) {\n            setTestStatus({\n              status: TestStatusEnum.Testing,\n              progress: count + 1,\n            });\n            await new Promise<undefined>(resolve => setTimeout(resolve, 100));\n            result = await new Promise<any>(resolve =>\n              resolve(props.target.extract(props.testData, \"email\")),\n            );\n          }\n          const t2 = performance.now();\n          const status: TestStatus = {\n            status: TestStatusEnum.Done,\n            performance: (t2 - t1) / props.testingConfig!.retryTimes,\n            output: result,\n          };\n          setTestStatus(status);\n          return status;\n        } else {\n          const t1 = performance.now();\n          let result: any;\n          for (\n            let count = 0;\n            count < props.testingConfig!.retryTimes;\n            count++\n          ) {\n            setTestStatus({\n              status: TestStatusEnum.Testing,\n              progress: count + 1,\n            });\n            await new Promise<undefined>(resolve => setTimeout(resolve, 100));\n            result = await new Promise<any>(resolve =>\n              resolve(props.target.merge(props.testData)),\n            );\n          }\n          const t2 = performance.now();\n          const status: TestStatus = {\n            status: TestStatusEnum.Done,\n            performance: (t2 - t1) / props.testingConfig!.retryTimes,\n            output: JSON.stringify(result, undefined, \"  \"),\n          };\n          setTestStatus(status);\n          return status;\n        }\n      } catch (e) {\n        const status: TestStatus = {\n          status: TestStatusEnum.Error,\n          message: e.name,\n        };\n        setTestStatus(status);\n        return status;\n      }\n    };\n\n    React.useImperativeHandle(ref, () => ({\n      runTest,\n    }));\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column computer=\"12\" tablet=\"10\" mobile=\"10\">\n              <Header as=\"h4\">\n                {props.target.DisplayName}\n                <Header.Subheader>{props.target.Description}</Header.Subheader>\n              </Header>\n            </Grid.Column>\n            <Grid.Column computer=\"4\" tablet=\"6\" mobile=\"6\" textAlign=\"right\">\n              <TestingStatus\n                result={testStatus}\n                testConfig={props.testingConfig}\n              />\n            </Grid.Column>\n            {testStatus.status === TestStatusEnum.Done ? (\n              <Grid.Column width=\"16\">\n                <Header as=\"h5\">Output</Header>\n                <Segment inverted>\n                  <code>{testStatus.output}</code>\n                </Segment>\n              </Grid.Column>\n            ) : null}\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  },\n);\n\nexport default function TestingView(props: {\n  users: UserData;\n  generatorConfig: GenerateDataFormModel;\n}) {\n  const [testingConfig, setTestingConfig] = React.useState<TestConfig>();\n  // const [testStatus, setTestStatus] = React.useState<\n  //   { [key in TestName]?: TestStatus }\n  // >({});\n\n  const accumulatorTestTargetRef = React.useRef<typeof TestTarget>();\n  const deepmergeTestTargetRef = React.useRef<typeof TestTarget>();\n  const assignTestTargetRef = React.useRef<typeof TestTarget>();\n  const lodashTestTargetRef = React.useRef<typeof TestTarget>();\n\n  return (\n    <>\n      <Formik<TestConfig>\n        initialValues={{\n          retryTimes: 5,\n          extract: true,\n        }}\n        onSubmit={async form => {\n          setTestingConfig(form);\n          await (accumulatorTestTargetRef.current! as any).runTest();\n          await (deepmergeTestTargetRef.current! as any).runTest();\n          await (lodashTestTargetRef.current! as any).runTest();\n          await (assignTestTargetRef.current! as any).runTest();\n        }}\n      >\n        {({ submitForm }) => (\n          <Form>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column computer=\"5\" tablet=\"8\" mobile=\"16\">\n                  <Form.Field>\n                    <label>Mode</label>\n                    <Field\n                      name=\"extract\"\n                      render={({ form, field }: FieldProps<TestConfig>) => (\n                        <Button.Group>\n                          <Button\n                            active={field.value}\n                            onClick={() => form.setFieldValue(\"extract\", true)}\n                          >\n                            Extract\n                          </Button>\n                          <Button\n                            active={!field.value}\n                            onClick={() => form.setFieldValue(\"extract\", false)}\n                          >\n                            Merge\n                          </Button>\n                        </Button.Group>\n                      )}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column computer=\"8\" tablet=\"16\" mobile=\"16\">\n                  <Form.Field>\n                    <label>Times</label>\n                    <Field\n                      name=\"retryTimes\"\n                      render={({ form, field }: FieldProps<TestConfig>) => (\n                        <Form.Input type=\"text\" value={field.value} action>\n                          <input disabled />\n                          <Button\n                            onClick={() =>\n                              form.setFieldValue(\n                                \"retryTimes\",\n                                Math.max(field.value - 1, 1),\n                              )\n                            }\n                          >\n                            -1\n                          </Button>\n                          <Button\n                            onClick={() =>\n                              form.setFieldValue(\n                                \"retryTimes\",\n                                Math.min(field.value + 1, 10),\n                              )\n                            }\n                          >\n                            +1\n                          </Button>\n                        </Form.Input>\n                      )}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column computer=\"3\" tablet=\"16\" mobile=\"16\">\n                  <Form.Field>\n                    <label>-</label>\n                    <Button primary fluid onClick={submitForm}>\n                      Run\n                    </Button>\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n      <TestTarget\n        ref={accumulatorTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.Accumulator}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={deepmergeTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.DeepMerge}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={lodashTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.Lodash}\n        generatorConfig={props.generatorConfig}\n      />\n      <TestTarget\n        ref={assignTestTargetRef}\n        testData={props.users}\n        testingConfig={testingConfig}\n        target={Targets.ObjectAssign}\n        generatorConfig={props.generatorConfig}\n      />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList } from \"react-window\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { UserData } from \"../func/generateUsers\";\n\nexport default function PreviewView(props: { users: UserData }) {\n  const listRef = React.createRef<FixedSizeList>();\n\n  function gotoTop() {\n    if (listRef.current) {\n      listRef.current.scrollToItem(0);\n    }\n  }\n\n  function gotoBottom() {\n    if (listRef.current) {\n      listRef.current.scrollToItem(props.users.length);\n    }\n  }\n\n  return (\n    <>\n      <Button.Group fluid basic>\n        <Button onClick={gotoTop}>Scroll to Top</Button>\n        <Button onClick={gotoBottom}>Scroll to End</Button>\n      </Button.Group>\n      <div style={{ marginTop: \"1em\", minHeight: \"40em\" }}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <FixedSizeList\n              width={width}\n              height={height}\n              itemData={props.users}\n              itemSize={24}\n              itemCount={props.users.length}\n              ref={listRef}\n            >\n              {({ data, index, style }) => (\n                <div\n                  style={{\n                    ...style,\n                    whiteSpace: \"nowrap\",\n                    backgroundColor: index % 2 === 0 ? \"#dddddd\" : \"white\",\n                    width: \"initial\",\n                  }}\n                >\n                  <code>{JSON.stringify(data[index])}</code>\n                </div>\n              )}\n            </FixedSizeList>\n          )}\n        </AutoSizer>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Header,\n  Segment,\n  Form,\n  Grid,\n  Message,\n  Loader,\n  Dimmer,\n} from \"semantic-ui-react\";\nimport { Formik, Field, FieldProps } from \"formik\";\nimport {\n  GenerateDataFormModel,\n  DataAmount,\n  DataLevel,\n  generateUsers,\n  UserData,\n} from \"../func/generateUsers\";\nimport TestingView from \"./TestingView\";\nimport PreviewView from \"./PreviewView\";\n\nexport default function TryNowSection() {\n  const [users, setUsers] = React.useState<UserData>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [generatorConfig, setGeneratorConfig] = React.useState<\n    GenerateDataFormModel | undefined\n  >();\n  return (\n    <>\n      <Header as=\"h1\" id=\"demo\">\n        Demo\n      </Header>\n      <Segment>\n        <Header as=\"h3\">Generate Data</Header>\n        <Formik<GenerateDataFormModel>\n          initialValues={{ amount: DataAmount[\"10k\"], level: DataLevel.Single }}\n          onSubmit={form => {\n            setGeneratorConfig(form);\n            setLoading(true);\n            new Promise<UserData>(resolve =>\n              setTimeout(() => resolve(generateUsers(form)), 100),\n            ).then(generatedUsers => {\n              setUsers(generatedUsers);\n              setLoading(false);\n            });\n          }}\n        >\n          {({ submitForm }) => (\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Field\n                  name=\"amount\"\n                  render={({\n                    field,\n                    form,\n                  }: FieldProps<GenerateDataFormModel>) => (\n                    <Form.Select\n                      fluid\n                      label=\"Amount\"\n                      options={[\n                        {\n                          key: DataAmount[\"10k\"],\n                          text: DataAmount[\"10k\"],\n                          value: DataAmount[\"10k\"],\n                        },\n                        {\n                          key: DataAmount[\"50k\"],\n                          text: DataAmount[\"50k\"],\n                          value: DataAmount[\"50k\"],\n                        },\n                        {\n                          key: DataAmount[\"100k\"],\n                          text: DataAmount[\"100k\"],\n                          value: DataAmount[\"100k\"],\n                        },\n                        {\n                          key: DataAmount[\"250k\"],\n                          text: DataAmount[\"250k\"],\n                          value: DataAmount[\"250k\"],\n                        },\n                        {\n                          key: DataAmount[\"500k\"],\n                          text: DataAmount[\"500k\"],\n                          value: DataAmount[\"500k\"],\n                        },\n                      ]}\n                      onChange={(event, dropdownProps) =>\n                        form.setFieldValue(\"amount\", dropdownProps.value)\n                      }\n                      value={field.value}\n                    />\n                  )}\n                />\n                <Field\n                  name=\"level\"\n                  render={({\n                    field,\n                    form,\n                  }: FieldProps<GenerateDataFormModel>) => (\n                    <Form.Select\n                      fluid\n                      label=\"Level\"\n                      options={[\n                        {\n                          key: DataLevel.Single,\n                          text: \"Single Level\",\n                          value: DataLevel.Single,\n                        },\n                        {\n                          key: DataLevel.TwoLevel,\n                          text: \"Two Level\",\n                          value: DataLevel.TwoLevel,\n                        },\n                      ]}\n                      onChange={(event, dropdownProps) =>\n                        form.setFieldValue(\"level\", dropdownProps.value)\n                      }\n                      value={field.value}\n                    />\n                  )}\n                />\n                <Form.Field>\n                  <label>.</label>\n                  <Form.Button fluid primary onClick={submitForm}>\n                    Generate\n                  </Form.Button>\n                </Form.Field>\n              </Form.Group>\n            </Form>\n          )}\n        </Formik>\n      </Segment>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column computer=\"10\" tablet=\"10\" mobile=\"16\">\n            <Segment>\n              <Header as=\"h3\">Benchmark</Header>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              {!loading && users && generatorConfig ? (\n                <TestingView users={users} generatorConfig={generatorConfig} />\n              ) : (\n                <Message warning>Please Generate Data</Message>\n              )}\n            </Segment>\n          </Grid.Column>\n          <Grid.Column computer=\"6\" tablet=\"6\" mobile=\"16\">\n            <Segment>\n              <Header as=\"h3\">\n                Preview Generated Data\n                {!loading && users ? (\n                  <Header.Subheader>{`Length: ${users.length}`}</Header.Subheader>\n                ) : null}\n              </Header>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              {!loading && users ? (\n                <PreviewView users={users} />\n              ) : (\n                <Message warning>Please Generate Data</Message>\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AppHeader from \"./views/AppHeader\";\nimport QuickStartSection from \"./views/QuickStartSection\";\nimport FeaturesSection from \"./views/FeaturesSection\";\nimport TryNowSection from \"./views/TryNowSection\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Segment\n        inverted\n        textAlign=\"center\"\n        style={{ minHeight: 240, padding: \"0.5em 0em\" }}\n        vertical\n      >\n        <AppHeader />\n      </Segment>\n      <Container>\n        <Segment vertical>\n          <QuickStartSection />\n        </Segment>\n        <Segment vertical>\n          <FeaturesSection />\n        </Segment>\n        <Segment vertical>\n          <TryNowSection />\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}